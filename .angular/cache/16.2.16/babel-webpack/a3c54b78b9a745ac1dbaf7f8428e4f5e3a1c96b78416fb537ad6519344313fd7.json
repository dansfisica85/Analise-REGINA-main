{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/common\";\nfunction LegacyPageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Carregando p\\u00E1gina...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LegacyPageComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction LegacyPageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.htmlContent, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class LegacyPageComponent {\n  constructor(route, http, sanitizer) {\n    this.route = route;\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.htmlContent = null;\n    this.loading = true;\n    this.error = null;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const name = params.get('name') || 'index';\n      this.loadPage(name);\n    });\n  }\n  loadPage(name) {\n    this.loading = true;\n    this.error = null;\n    const path = `assets/pages/${name}.html`;\n    this.http.get(path, {\n      responseType: 'text'\n    }).subscribe({\n      next: html => {\n        // Atenção: estamos confiando no conteúdo estático copiado para assets.\n        this.htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n        this.loading = false;\n      },\n      error: err => {\n        this.error = `Não foi possível carregar ${path} (HTTP ${err.status})`;\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LegacyPageComponent_Factory(t) {\n      return new (t || LegacyPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LegacyPageComponent,\n      selectors: [[\"app-legacy-page\"]],\n      decls: 3,\n      vars: 3,\n      consts: [[4, \"ngIf\"], [\"class\", \"error\", 4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [1, \"error\"], [3, \"innerHTML\"]],\n      template: function LegacyPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, LegacyPageComponent_div_0_Template, 2, 0, \"div\", 0);\n          i0.ɵɵtemplate(1, LegacyPageComponent_div_1_Template, 2, 1, \"div\", 1);\n          i0.ɵɵtemplate(2, LegacyPageComponent_div_2_Template, 1, 1, \"div\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.htmlContent);\n        }\n      },\n      dependencies: [i4.NgIf],\n      styles: [\"\\n\\n.error[_ngcontent-%COMP%] { color: red; }\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGVnYWN5LXBhZ2UvbGVnYWN5LXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0IsU0FBUyxVQUFVLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc3RpbG9zIGRhIHDDg8KhZ2luYSBsZWdhZGEgKi9cclxuLmVycm9yIHsgY29sb3I6IHJlZDsgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","error","ɵɵelement","ɵɵproperty","ctx_r2","htmlContent","ɵɵsanitizeHtml","LegacyPageComponent","constructor","route","http","sanitizer","loading","ngOnInit","paramMap","subscribe","params","name","get","loadPage","path","responseType","next","html","bypassSecurityTrustHtml","err","status","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","i3","DomSanitizer","selectors","decls","vars","consts","template","LegacyPageComponent_Template","rf","ctx","ɵɵtemplate","LegacyPageComponent_div_0_Template","LegacyPageComponent_div_1_Template","LegacyPageComponent_div_2_Template"],"sources":["C:\\Users\\davi.silva\\Downloads\\Analise-REGINA-main\\src\\app\\legacy-page\\legacy-page.component.ts","C:\\Users\\davi.silva\\Downloads\\Analise-REGINA-main\\src\\app\\legacy-page\\legacy-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-legacy-page',\r\n  templateUrl: './legacy-page.component.html',\r\n  styleUrls: ['./legacy-page.component.css']\r\n})\r\nexport class LegacyPageComponent implements OnInit {\r\n  htmlContent: SafeHtml | null = null;\r\n  loading = true;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const name = params.get('name') || 'index';\r\n      this.loadPage(name);\r\n    });\r\n  }\r\n\r\n  loadPage(name: string) {\r\n    this.loading = true;\r\n    this.error = null;\r\n    const path = `assets/pages/${name}.html`;\r\n    this.http.get(path, { responseType: 'text' }).subscribe({\r\n      next: html => {\r\n        // Atenção: estamos confiando no conteúdo estático copiado para assets.\r\n        this.htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\r\n        this.loading = false;\r\n      },\r\n      error: err => {\r\n        this.error = `Não foi possível carregar ${path} (HTTP ${err.status})`;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"loading\">Carregando página...</div>\r\n<div *ngIf=\"error\" class=\"error\">{{ error }}</div>\r\n<div *ngIf=\"htmlContent\" [innerHTML]=\"htmlContent\"></div>\r\n"],"mappings":";;;;;;;ICAAA,EAAA,CAAAC,cAAA,UAAqB;IAAAD,EAAA,CAAAE,MAAA,gCAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAC/CH,EAAA,CAAAC,cAAA,aAAiC;IAAAD,EAAA,CAAAE,MAAA,GAAW;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAjBH,EAAA,CAAAI,SAAA,GAAW;IAAXJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,KAAA,CAAW;;;;;IAC5CP,EAAA,CAAAQ,SAAA,aAAyD;;;;IAAhCR,EAAA,CAAAS,UAAA,cAAAC,MAAA,CAAAC,WAAA,EAAAX,EAAA,CAAAY,cAAA,CAAyB;;;ADQlD,OAAM,MAAOC,mBAAmB;EAK9BC,YACUC,KAAqB,EACrBC,IAAgB,EAChBC,SAAuB;IAFvB,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,SAAS,GAATA,SAAS;IAPnB,KAAAN,WAAW,GAAoB,IAAI;IACnC,KAAAO,OAAO,GAAG,IAAI;IACd,KAAAX,KAAK,GAAkB,IAAI;EAMvB;EAEJY,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;MAC1C,IAAI,CAACC,QAAQ,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC;EACJ;EAEAE,QAAQA,CAACF,IAAY;IACnB,IAAI,CAACL,OAAO,GAAG,IAAI;IACnB,IAAI,CAACX,KAAK,GAAG,IAAI;IACjB,MAAMmB,IAAI,GAAG,gBAAgBH,IAAI,OAAO;IACxC,IAAI,CAACP,IAAI,CAACQ,GAAG,CAACE,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC,CAACN,SAAS,CAAC;MACtDO,IAAI,EAAEC,IAAI,IAAG;QACX;QACA,IAAI,CAAClB,WAAW,GAAG,IAAI,CAACM,SAAS,CAACa,uBAAuB,CAACD,IAAI,CAAC;QAC/D,IAAI,CAACX,OAAO,GAAG,KAAK;MACtB,CAAC;MACDX,KAAK,EAAEwB,GAAG,IAAG;QACX,IAAI,CAACxB,KAAK,GAAG,6BAA6BmB,IAAI,UAAUK,GAAG,CAACC,MAAM,GAAG;QACrE,IAAI,CAACd,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBAjCWL,mBAAmB,EAAAb,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAnC,EAAA,CAAAiC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAArC,EAAA,CAAAiC,iBAAA,CAAAK,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAnB1B,mBAAmB;MAAA2B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVhC9C,EAAA,CAAAgD,UAAA,IAAAC,kCAAA,iBAA+C;UAC/CjD,EAAA,CAAAgD,UAAA,IAAAE,kCAAA,iBAAkD;UAClDlD,EAAA,CAAAgD,UAAA,IAAAG,kCAAA,iBAAyD;;;UAFnDnD,EAAA,CAAAS,UAAA,SAAAsC,GAAA,CAAA7B,OAAA,CAAa;UACblB,EAAA,CAAAI,SAAA,GAAW;UAAXJ,EAAA,CAAAS,UAAA,SAAAsC,GAAA,CAAAxC,KAAA,CAAW;UACXP,EAAA,CAAAI,SAAA,GAAiB;UAAjBJ,EAAA,CAAAS,UAAA,SAAAsC,GAAA,CAAApC,WAAA,CAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}